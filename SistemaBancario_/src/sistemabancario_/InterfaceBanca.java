/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sistemabancario_;

import java.awt.BorderLayout;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author Jossue
 */
public class InterfaceBanca extends javax.swing.JFrame {

    private Banco banco;
    
    public InterfaceBanca() {
        initComponents();
        banco = new Banco("Banco Pichinca", "Amazonas");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Seleccionar Cliente:");

        jButton1.setText("Añadir Cliente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Seleccionar Tipo de Cuenta:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cuenta Ahorro", "Cuenta Corriente" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton2.setText("Crear Cuenta");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Monto:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton3.setText("Depositar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Retirar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Consultar Saldo");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel1)
                                .addGap(15, 15, 15)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jButton5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(36, 36, 36)
                .addComponent(jButton5)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       // Obtener el monto desde el campo de texto
    String montoTexto = jTextField1.getText();
    if (montoTexto.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor ingrese un monto.");
        return;
    }

    double monto = Double.parseDouble(montoTexto);

    // Obtener el cliente seleccionado
    String nombreCliente = (String) jComboBox1.getSelectedItem();
    Cliente clienteSeleccionado = null;

    for (Cliente cliente : banco.getClientes()) {
        if (cliente.getNombre().equals(nombreCliente)) {
            clienteSeleccionado = cliente;
            break;
        }
    }

    if (clienteSeleccionado != null) {
        // Verificar si el cliente tiene cuentas
        if (!clienteSeleccionado.getCuentas().isEmpty()) {
            // Permitir al usuario seleccionar la cuenta (aquí se debería agregar un ComboBox de cuentas)
            Cuenta cuentaSeleccionada = clienteSeleccionado.getCuentas().get(0);  // Puede ser un JComboBox

            // Realizar el depósito
            cuentaSeleccionada.deposito(monto);
            JOptionPane.showMessageDialog(this, "Depósito realizado exitosamente.");
        } else {
            JOptionPane.showMessageDialog(this, "El cliente no tiene cuentas.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Cliente no encontrado.");
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         // Obtener el monto desde el campo de texto
    String montoTexto = jTextField1.getText();
    if (montoTexto.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor ingrese un monto.");
        return;
    }

    double monto = Double.parseDouble(montoTexto);

    // Obtener el cliente seleccionado
    String nombreCliente = (String) jComboBox1.getSelectedItem();
    Cliente clienteSeleccionado = null;

    for (Cliente cliente : banco.getClientes()) {
        if (cliente.getNombre().equals(nombreCliente)) {
            clienteSeleccionado = cliente;
            break;
        }
    }

    if (clienteSeleccionado != null) {
        // Verificar si el cliente tiene cuentas
        if (!clienteSeleccionado.getCuentas().isEmpty()) {
            // Permitir al usuario seleccionar la cuenta
            Cuenta cuentaSeleccionada = clienteSeleccionado.getCuentas().get(0);  // Esto debe ser ajustado si usas un JComboBox de cuentas

            // Realizar el retiro
            if (cuentaSeleccionada.retiro(monto)) {
                JOptionPane.showMessageDialog(this, "Retiro realizado exitosamente.");
            } else {
                JOptionPane.showMessageDialog(this, "No se puede retirar esa cantidad.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "El cliente no tiene cuentas.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Cliente no encontrado.");
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
         // Lógica para agregar un nuevo cliente
        String idCliente = JOptionPane.showInputDialog("Ingrese el id del cliente:");
        String nombre = JOptionPane.showInputDialog("Ingrese el nombre del cliente:");
        String direccion = JOptionPane.showInputDialog("Ingrese la dirección del cliente:");

        Cliente nuevoCliente = new Cliente(idCliente, nombre, direccion);
        banco.agregarCliente(nuevoCliente);
        jComboBox1.addItem(nombre);  // Añadir cliente al ComboBox
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Obtener el cliente seleccionado
    String nombreCliente = (String) jComboBox1.getSelectedItem();
    Cliente clienteSeleccionado = null;

    // Buscar al cliente en la lista de clientes del banco
    for (Cliente cliente : banco.getClientes()) {
        if (cliente.getNombre().equals(nombreCliente)) {
            clienteSeleccionado = cliente;
            break;
        }
    }

    if (clienteSeleccionado != null) {
        // Obtener el tipo de cuenta seleccionado
        String tipoCuenta = (String) jComboBox2.getSelectedItem();

        // Solicitar el saldo inicial
        String saldoTexto = JOptionPane.showInputDialog("Ingrese el saldo inicial de la cuenta:");
        double saldoInicial = Double.parseDouble(saldoTexto);

        // Crear la nueva cuenta
        Cuenta nuevaCuenta = null;
        if ("Cuenta Ahorro".equals(tipoCuenta)) {
            nuevaCuenta = new CuentaAhorro("A" + System.currentTimeMillis(), saldoInicial, 0.03, 5000);
        } else if ("Cuenta Corriente".equals(tipoCuenta)) {
            nuevaCuenta = new CuentaCorriente("C" + System.currentTimeMillis(), saldoInicial, 2000, 0.1, 20);
        }

        if (nuevaCuenta != null) {
            clienteSeleccionado.agregarCuenta(nuevaCuenta);
            JOptionPane.showMessageDialog(this, "Cuenta creada exitosamente para " + clienteSeleccionado.getNombre());
        } else {
            JOptionPane.showMessageDialog(this, "Error al crear la cuenta.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Cliente no encontrado.");
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
           // Obtener el cliente seleccionado
    String nombreCliente = (String) jComboBox1.getSelectedItem();
    Cliente clienteSeleccionado = null;

    // Buscar al cliente en la lista de clientes del banco
    for (Cliente cliente : banco.getClientes()) {
        if (cliente.getNombre().equals(nombreCliente)) {
            clienteSeleccionado = cliente;
            break;
        }
    }

    if (clienteSeleccionado != null) {
        // Obtener el tipo de cuenta seleccionado
        String tipoCuenta = (String) jComboBox2.getSelectedItem();
        Cuenta cuentaSeleccionada = null;

        // Buscar la cuenta seleccionada según el tipo
        for (Cuenta cuenta : clienteSeleccionado.getCuentas()) {
            if ((tipoCuenta.equals("Cuenta Ahorro") && cuenta instanceof CuentaAhorro) || 
                (tipoCuenta.equals("Cuenta Corriente") && cuenta instanceof CuentaCorriente)) {
                cuentaSeleccionada = cuenta;
                break;
            }
        }

        if (cuentaSeleccionada != null) {
            // Crear un nuevo JFrame para mostrar los detalles
            JFrame detallesSaldoFrame = new JFrame("Detalles del Saldo");
            detallesSaldoFrame.setSize(400, 200);
            detallesSaldoFrame.setLayout(new BorderLayout());

            // Crear un panel para mostrar la información
            JPanel infoPanel = new JPanel();
            infoPanel.setLayout(new BoxLayout(infoPanel, BoxLayout.Y_AXIS));

            // Mostrar los detalles del cliente, cuenta, saldo y movimientos
            String detalles = "Cliente: " + clienteSeleccionado.getNombre() + "\n" +
                              "ID Cliente: " + clienteSeleccionado.getIdCliente() + "\n" +
                              "Tipo de Cuenta: " + tipoCuenta + "\n" +
                              "Saldo Actual: " + cuentaSeleccionada.getSaldo() + "\n" +
                              "Movimientos:\n" + cuentaSeleccionada.obtenerMovimientos();  

            JTextArea textArea = new JTextArea(detalles);
            textArea.setEditable(false);
            infoPanel.add(new JScrollPane(textArea));

            // Agregar el panel al JFrame
            detallesSaldoFrame.add(infoPanel, BorderLayout.CENTER);

            // Hacer visible el JFrame
            detallesSaldoFrame.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró la cuenta seleccionada.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Cliente no encontrado.");
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceBanca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceBanca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceBanca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceBanca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceBanca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
